{ config, pkgs, lib, ... }:
let
  cfg = config.services.cronie;
in
{
  options.services.cronie = {
    enable = lib.mkOption {
      type = lib.types.bool;
      default = false;
    };

    package = lib.mkOption {
      type = lib.types.package;
      default = pkgs.cronie.overrideAttrs (_: {
        configureFlags = [
          "--localstatedir=/var"
          "--sysconfdir=/etc"
        ];
      });
    };

    settings = {
      SHELL = lib.mkOption {
        type = lib.types.path;
        default = lib.getExe pkgs.bash;
      };

      PATH = lib.mkOption {
        type = with lib.types; listOf (either path package);
        apply = lib.makeBinPath;
      };

      MAILTO = lib.mkOption {
        type = with lib.types; nullOr str;
        default = null;
      };

      # cronie extensions: https://man.archlinux.org/man/crontab.5.en

      MAILFROM = lib.mkOption {
        type = with lib.types; nullOr str;
        default = null;
      };

      CRON_TZ = lib.mkOption {
        type = with lib.types; nullOr str;
        default = null; # config.time.timeZone;
      };

      RANDOM_DELAY = lib.mkOption {
        type = with lib.types; nullOr str;
        default = null;
      };

      # CONTENT_TYPE
      # CONTENT_TRANSFER_ENCODING
    };

    systab = lib.mkOption {
      type = with lib.types; listOf nonEmptyStr;
      default = [ ];
      example = lib.literalExpression ''
        [ "* * * * *  test   ls -l / > /tmp/cronout 2>&1"
          "* * * * *  eelco  echo Hello World > /home/eelco/cronout"
        ]
      '';
    };
  };

  config = lib.mkIf cfg.enable {
    services.cronie.settings = {
      PATH = [
        (builtins.dirOf config.security.wrapperDir)
        pkgs.coreutils
      ];
    };

    environment.etc.crontab = {
      mode = "0600";
      text = ''
        # generated by nix, do not edit
        ${lib.concatMapAttrsStringSep "\n" (k: v: "${k}=${toString v}") (lib.filterAttrs (_: v: v != null) cfg.settings)}

        ${lib.concatStringsSep "\n" cfg.systab}
      '';
    };

    environment.systemPackages = [
      cfg.package
    ];

    services.tmpfiles.cron.rules = [
      "d /var/cron 0710"
      "d /var/spool 0755 - - -"
      "d /var/spool/cron 0755 - - -"
    ];

    security.wrappers.crontab = {
      setuid = true;
      owner = "root";
      group = "root";
      source = "${cfg.package}/bin/crontab";
    };

    finit.services.cron = {
      description = "cron daemon";
      conditions = "service/syslogd/ready";
      command = "${lib.getExe cfg.package} -n -s"; # -P
      notify = "pid";
    };
  };
}
